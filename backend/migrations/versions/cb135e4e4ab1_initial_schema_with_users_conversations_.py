"""Initial schema with users, conversations, health_data

Revision ID: cb135e4e4ab1
Revises: 001
Create Date: 2025-10-07 00:40:25.990950

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'cb135e4e4ab1'
down_revision: Union[str, None] = '001'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('conversations', 'messages',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               server_default=None,
               comment="对话消息数组 [{role: 'user'|'assistant', content: str, timestamp: str}]",
               existing_comment='对话消息数组',
               existing_nullable=False)
    op.alter_column('conversations', 'ai_provider_used',
               existing_type=sa.VARCHAR(length=50),
               comment='使用的AI提供商(phi-3.5/gpt-4o/claude-3.5-sonnet等)',
               existing_comment='使用的AI提供商',
               existing_nullable=True)
    op.alter_column('conversations', 'message_count',
               existing_type=sa.INTEGER(),
               server_default=None,
               existing_comment='消息总数',
               existing_nullable=False)
    op.alter_column('conversations', 'context_summary',
               existing_type=sa.TEXT(),
               comment='对话上下文摘要(用于长对话压缩)',
               existing_comment='对话上下文摘要',
               existing_nullable=True)
    op.alter_column('conversations', 'intent_classification',
               existing_type=sa.VARCHAR(length=50),
               comment='对话意图分类(health_query/energy_coaching/meditation等)',
               existing_comment='对话意图分类',
               existing_nullable=True)
    op.alter_column('conversations', 'is_active',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               existing_comment='是否为活跃对话',
               existing_nullable=False)
    op.alter_column('conversations', 'is_archived',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               existing_comment='是否已归档',
               existing_nullable=False)
    op.add_column('health_data', sa.Column('extra_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True, comment='额外元数据(JSON格式)'))
    op.alter_column('health_data', 'unit',
               existing_type=sa.VARCHAR(length=20),
               comment='单位(hours/bpm/steps等)',
               existing_comment='单位',
               existing_nullable=True)
    op.alter_column('health_data', 'encrypted_data',
               existing_type=sa.TEXT(),
               comment='加密的原始数据(Fernet加密)',
               existing_comment='加密的原始数据',
               existing_nullable=True)
    op.alter_column('health_data', 'external_id',
               existing_type=sa.VARCHAR(length=255),
               comment='外部系统ID(用于防止重复同步)',
               existing_comment='外部系统ID',
               existing_nullable=True)
    op.alter_column('health_data', 'is_anomaly',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               existing_comment='是否为异常值',
               existing_nullable=False)
    op.drop_column('health_data', 'metadata')
    op.alter_column('users', 'timezone',
               existing_type=sa.VARCHAR(length=50),
               server_default=None,
               existing_comment='用户时区',
               existing_nullable=False)
    op.alter_column('users', 'is_subscribed',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               existing_comment='是否已订阅',
               existing_nullable=False)
    op.alter_column('users', 'is_trial',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               existing_comment='是否试用中',
               existing_nullable=False)
    op.alter_column('users', 'is_active',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               existing_comment='账号是否激活',
               existing_nullable=False)
    op.alter_column('users', 'is_verified',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               existing_comment='手机号是否验证',
               existing_nullable=False)
    op.alter_column('users', 'morning_briefing_enabled',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               existing_comment='是否启用早报',
               existing_nullable=False)
    op.alter_column('users', 'morning_briefing_time',
               existing_type=sa.VARCHAR(length=5),
               server_default=None,
               existing_comment='早报推送时间',
               existing_nullable=False)
    op.alter_column('users', 'evening_review_enabled',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               existing_comment='是否启用晚间复盘',
               existing_nullable=False)
    op.alter_column('users', 'evening_review_time',
               existing_type=sa.VARCHAR(length=5),
               server_default=None,
               existing_comment='晚间复盘时间',
               existing_nullable=False)
    op.drop_constraint(op.f('users_phone_number_key'), 'users', type_='unique')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint(op.f('users_phone_number_key'), 'users', ['phone_number'], postgresql_nulls_not_distinct=False)
    op.alter_column('users', 'evening_review_time',
               existing_type=sa.VARCHAR(length=5),
               server_default=sa.text("'22:00'::character varying"),
               existing_comment='晚间复盘时间',
               existing_nullable=False)
    op.alter_column('users', 'evening_review_enabled',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('true'),
               existing_comment='是否启用晚间复盘',
               existing_nullable=False)
    op.alter_column('users', 'morning_briefing_time',
               existing_type=sa.VARCHAR(length=5),
               server_default=sa.text("'07:00'::character varying"),
               existing_comment='早报推送时间',
               existing_nullable=False)
    op.alter_column('users', 'morning_briefing_enabled',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('true'),
               existing_comment='是否启用早报',
               existing_nullable=False)
    op.alter_column('users', 'is_verified',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('false'),
               existing_comment='手机号是否验证',
               existing_nullable=False)
    op.alter_column('users', 'is_active',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('true'),
               existing_comment='账号是否激活',
               existing_nullable=False)
    op.alter_column('users', 'is_trial',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('false'),
               existing_comment='是否试用中',
               existing_nullable=False)
    op.alter_column('users', 'is_subscribed',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('false'),
               existing_comment='是否已订阅',
               existing_nullable=False)
    op.alter_column('users', 'timezone',
               existing_type=sa.VARCHAR(length=50),
               server_default=sa.text("'Asia/Shanghai'::character varying"),
               existing_comment='用户时区',
               existing_nullable=False)
    op.add_column('health_data', sa.Column('metadata', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True, comment='额外元数据'))
    op.alter_column('health_data', 'is_anomaly',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('false'),
               existing_comment='是否为异常值',
               existing_nullable=False)
    op.alter_column('health_data', 'external_id',
               existing_type=sa.VARCHAR(length=255),
               comment='外部系统ID',
               existing_comment='外部系统ID(用于防止重复同步)',
               existing_nullable=True)
    op.alter_column('health_data', 'encrypted_data',
               existing_type=sa.TEXT(),
               comment='加密的原始数据',
               existing_comment='加密的原始数据(Fernet加密)',
               existing_nullable=True)
    op.alter_column('health_data', 'unit',
               existing_type=sa.VARCHAR(length=20),
               comment='单位',
               existing_comment='单位(hours/bpm/steps等)',
               existing_nullable=True)
    op.drop_column('health_data', 'extra_data')
    op.alter_column('conversations', 'is_archived',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('false'),
               existing_comment='是否已归档',
               existing_nullable=False)
    op.alter_column('conversations', 'is_active',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('true'),
               existing_comment='是否为活跃对话',
               existing_nullable=False)
    op.alter_column('conversations', 'intent_classification',
               existing_type=sa.VARCHAR(length=50),
               comment='对话意图分类',
               existing_comment='对话意图分类(health_query/energy_coaching/meditation等)',
               existing_nullable=True)
    op.alter_column('conversations', 'context_summary',
               existing_type=sa.TEXT(),
               comment='对话上下文摘要',
               existing_comment='对话上下文摘要(用于长对话压缩)',
               existing_nullable=True)
    op.alter_column('conversations', 'message_count',
               existing_type=sa.INTEGER(),
               server_default=sa.text('0'),
               existing_comment='消息总数',
               existing_nullable=False)
    op.alter_column('conversations', 'ai_provider_used',
               existing_type=sa.VARCHAR(length=50),
               comment='使用的AI提供商',
               existing_comment='使用的AI提供商(phi-3.5/gpt-4o/claude-3.5-sonnet等)',
               existing_nullable=True)
    op.alter_column('conversations', 'messages',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               server_default=sa.text("'[]'::jsonb"),
               comment='对话消息数组',
               existing_comment="对话消息数组 [{role: 'user'|'assistant', content: str, timestamp: str}]",
               existing_nullable=False)
    # ### end Alembic commands ###
